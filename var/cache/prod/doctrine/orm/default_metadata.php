<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Agence__CLASSMETADATA__' => 0,
'App__Entity__Details5__CLASSMETADATA__' => 1,
'App__Entity__Details6__CLASSMETADATA__' => 2,
'App__Entity__Site__CLASSMETADATA__' => 3,
'App__Entity__Ville__CLASSMETADATA__' => 4,
'App__Entity__Achat__CLASSMETADATA__' => 5,
'App__Entity__User__CLASSMETADATA__' => 6,
'App__Entity__Details3__CLASSMETADATA__' => 7,
'App__Entity__Region__CLASSMETADATA__' => 8,
'App__Entity__TypeDeBien__CLASSMETADATA__' => 9,
'App__Entity__Details4__CLASSMETADATA__' => 10,
'App__Entity__DetailsCandidature__CLASSMETADATA__' => 11,
'App__Entity__Details2__CLASSMETADATA__' => 12,
'App__Entity__Projet__CLASSMETADATA__' => 13,
'App__Entity__Bien__CLASSMETADATA__' => 14,
'App__Entity__Client__CLASSMETADATA__' => 15,
'App__Entity__Details7__CLASSMETADATA__' => 16,
'App__Entity__Details1__CLASSMETADATA__' => 17,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Agence',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Agence',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AgenceRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'agence',
                    ],
                ],
                'associationMappings' => [
                    [
                        'clients' => [
                            'fieldName' => 'clients',
                            'mappedBy' => 'agence',
                            'targetEntity' => 'App\\Entity\\Client',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Agence',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'agence',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Agence',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'details' => [
                            'fieldName' => 'details',
                            'joinColumns' => [
                                [
                                    'name' => 'details_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'agences',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Agence',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'details_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'details_id' => 'details_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'details_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details5',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details5',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details5Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details5',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'type_de_contrat',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details5',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details6',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details6',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details6Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details6',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'qualite',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details6',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Site',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Site',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SiteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'reference_site' => [
                            'fieldName' => 'reference_site',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'reference_site',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'updated_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'reference_site' => 'reference_site',
                        'created_at' => 'createdAt',
                        'updated_at' => 'updatedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'reference_site' => 'reference_site',
                        'createdAt' => 'created_at',
                        'updatedAt' => 'updated_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'site',
                    ],
                ],
                'associationMappings' => [
                    [
                        'ville' => [
                            'fieldName' => 'ville',
                            'joinColumns' => [
                                [
                                    'name' => 'ville_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'site',
                            'targetEntity' => 'App\\Entity\\Ville',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Site',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'ville_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ville_id' => 'ville_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ville_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'projets' => [
                            'fieldName' => 'projets',
                            'mappedBy' => 'site',
                            'targetEntity' => 'App\\Entity\\Projet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Site',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Ville',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Ville',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\VilleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                        'lat' => [
                            'fieldName' => 'lat',
                            'type' => 'decimal',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 10,
                            'columnName' => 'lat',
                        ],
                        'lon' => [
                            'fieldName' => 'lon',
                            'type' => 'decimal',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 10,
                            'columnName' => 'lon',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'lat' => 'lat',
                        'lon' => 'lon',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'lat' => 'lat',
                        'lon' => 'lon',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ville',
                    ],
                ],
                'associationMappings' => [
                    [
                        'clients' => [
                            'fieldName' => 'clients',
                            'mappedBy' => 'ville',
                            'targetEntity' => 'App\\Entity\\Client',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Ville',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'region' => [
                            'fieldName' => 'region',
                            'joinColumns' => [
                                [
                                    'name' => 'region_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'villes',
                            'targetEntity' => 'App\\Entity\\Region',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Ville',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'region_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'region_id' => 'region_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'region_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'site' => [
                            'fieldName' => 'site',
                            'mappedBy' => 'ville',
                            'targetEntity' => 'App\\Entity\\Site',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Ville',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'biens' => [
                            'fieldName' => 'biens',
                            'mappedBy' => 'city',
                            'targetEntity' => 'App\\Entity\\Bien',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Ville',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Achat',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Achat',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AchatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'achat',
                    ],
                ],
                'associationMappings' => [
                    [
                        'client' => [
                            'fieldName' => 'client',
                            'joinColumns' => [
                                [
                                    'name' => 'client_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'achat',
                            'targetEntity' => 'App\\Entity\\Client',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Achat',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'client_id' => 'client_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'client_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'biens' => [
                            'fieldName' => 'biens',
                            'mappedBy' => 'mode_acquisition',
                            'targetEntity' => 'App\\Entity\\Bien',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Achat',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'mode_acquisition',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Achat',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'email',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'password',
                        ],
                        'isVerified' => [
                            'fieldName' => 'isVerified',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'is_verified',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'name',
                        ],
                        'firstname' => [
                            'fieldName' => 'firstname',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'firstname',
                        ],
                        'isActive' => [
                            'fieldName' => 'isActive',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'is_active',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'is_verified' => 'isVerified',
                        'name' => 'name',
                        'firstname' => 'firstname',
                        'is_active' => 'isActive',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'isVerified' => 'is_verified',
                        'name' => 'name',
                        'firstname' => 'firstname',
                        'isActive' => 'is_active',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'quoted' => true,
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details3',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details3',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details3Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details3',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'situation',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details3',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Region',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Region',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\RegionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'region',
                    ],
                ],
                'associationMappings' => [
                    [
                        'villes' => [
                            'fieldName' => 'villes',
                            'mappedBy' => 'region',
                            'targetEntity' => 'App\\Entity\\Ville',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Region',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TypeDeBien',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TypeDeBien',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TypeDeBienRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'prix',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'prix' => 'prix',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'prix' => 'prix',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'type_de_bien',
                    ],
                ],
                'associationMappings' => [
                    [
                        'bien' => [
                            'fieldName' => 'bien',
                            'mappedBy' => 'typeDeBien',
                            'targetEntity' => 'App\\Entity\\Bien',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TypeDeBien',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'type_de_logement',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TypeDeBien',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details4',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details4',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details4Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details4',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'secteur',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details4',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\DetailsCandidature',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\DetailsCandidature',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DetailsCandidatureRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom_de_la_cooperative' => [
                            'fieldName' => 'nom_de_la_cooperative',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'nom_de_la_cooperative',
                        ],
                        'nombre_de_personne_en_charge' => [
                            'fieldName' => 'nombre_de_personne_en_charge',
                            'type' => 'decimal',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 10,
                            'columnName' => 'nombre_de_personne_en_charge',
                        ],
                        'nom_de_la_banque' => [
                            'fieldName' => 'nom_de_la_banque',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'nom_de_la_banque',
                        ],
                        'nom_de_la_societe' => [
                            'fieldName' => 'nom_de_la_societe',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'nom_de_la_societe',
                        ],
                        'revenu_mensuelle' => [
                            'fieldName' => 'revenu_mensuelle',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'revenu_mensuelle',
                        ],
                        'salaire_mensuelle' => [
                            'fieldName' => 'salaire_mensuelle',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'salaire_mensuelle',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 7,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'color',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'array',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'nom',
                        ],
                        'nom_employeur' => [
                            'fieldName' => 'nom_employeur',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'nom_employeur',
                        ],
                        'activite_non_salarie' => [
                            'fieldName' => 'activite_non_salarie',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'activite_non_salarie',
                        ],
                        'lieu_activite_non_salarie' => [
                            'fieldName' => 'lieu_activite_non_salarie',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'lieu_activite_non_salarie',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'status',
                        ],
                        'prenom_et_nom' => [
                            'fieldName' => 'prenom_et_nom',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'prenom_et_nom',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_de_la_cooperative' => 'nom_de_la_cooperative',
                        'nombre_de_personne_en_charge' => 'nombre_de_personne_en_charge',
                        'nom_de_la_banque' => 'nom_de_la_banque',
                        'nom_de_la_societe' => 'nom_de_la_societe',
                        'revenu_mensuelle' => 'revenu_mensuelle',
                        'salaire_mensuelle' => 'salaire_mensuelle',
                        'label' => 'label',
                        'color' => 'color',
                        'nom' => 'nom',
                        'nom_employeur' => 'nom_employeur',
                        'activite_non_salarie' => 'activite_non_salarie',
                        'lieu_activite_non_salarie' => 'lieu_activite_non_salarie',
                        'status' => 'status',
                        'prenom_et_nom' => 'prenom_et_nom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom_de_la_cooperative' => 'nom_de_la_cooperative',
                        'nombre_de_personne_en_charge' => 'nombre_de_personne_en_charge',
                        'nom_de_la_banque' => 'nom_de_la_banque',
                        'nom_de_la_societe' => 'nom_de_la_societe',
                        'revenu_mensuelle' => 'revenu_mensuelle',
                        'salaire_mensuelle' => 'salaire_mensuelle',
                        'label' => 'label',
                        'color' => 'color',
                        'nom' => 'nom',
                        'nom_employeur' => 'nom_employeur',
                        'activite_non_salarie' => 'activite_non_salarie',
                        'lieu_activite_non_salarie' => 'lieu_activite_non_salarie',
                        'status' => 'status',
                        'prenom_et_nom' => 'prenom_et_nom',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details_candidature',
                    ],
                ],
                'associationMappings' => [
                    [
                        'membre_cooperative' => [
                            'fieldName' => 'membre_cooperative',
                            'joinColumns' => [
                                [
                                    'name' => 'membre_cooperative_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details1',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'membre_cooperative_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'membre_cooperative_id' => 'membre_cooperative_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'membre_cooperative_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'compte_bancaire' => [
                            'fieldName' => 'compte_bancaire',
                            'joinColumns' => [
                                [
                                    'name' => 'compte_bancaire_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details1',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'compte_bancaire_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'compte_bancaire_id' => 'compte_bancaire_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'compte_bancaire_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'beneficiaire_appui_ou_subvention' => [
                            'fieldName' => 'beneficiaire_appui_ou_subvention',
                            'joinColumns' => [
                                [
                                    'name' => 'beneficiaire_appui_ou_subvention_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details1',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'beneficiaire_appui_ou_subvention_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'beneficiaire_appui_ou_subvention_id' => 'beneficiaire_appui_ou_subvention_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'beneficiaire_appui_ou_subvention_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'logement_actuel' => [
                            'fieldName' => 'logement_actuel',
                            'joinColumns' => [
                                [
                                    'name' => 'logement_actuel_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details2',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'logement_actuel_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'logement_actuel_id' => 'logement_actuel_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'logement_actuel_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'client' => [
                            'fieldName' => 'client',
                            'joinColumns' => [
                                [
                                    'name' => 'client_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Client',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'client_id' => 'client_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'client_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'situation' => [
                            'fieldName' => 'situation',
                            'joinColumns' => [
                                [
                                    'name' => 'situation_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details3',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'situation_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'situation_id' => 'situation_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'situation_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'secteur' => [
                            'fieldName' => 'secteur',
                            'joinColumns' => [
                                [
                                    'name' => 'secteur_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details4',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'secteur_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'secteur_id' => 'secteur_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'secteur_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'type_de_contrat' => [
                            'fieldName' => 'type_de_contrat',
                            'joinColumns' => [
                                [
                                    'name' => 'type_de_contrat_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details5',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_de_contrat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_de_contrat_id' => 'type_de_contrat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_de_contrat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'type_de_logement' => [
                            'fieldName' => 'type_de_logement',
                            'joinColumns' => [
                                [
                                    'name' => 'type_de_logement_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\TypeDeBien',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_de_logement_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_de_logement_id' => 'type_de_logement_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_de_logement_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'qualite' => [
                            'fieldName' => 'qualite',
                            'joinColumns' => [
                                [
                                    'name' => 'qualite_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details6',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'qualite_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'qualite_id' => 'qualite_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'qualite_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'handicap' => [
                            'fieldName' => 'handicap',
                            'joinColumns' => [
                                [
                                    'name' => 'handicap_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Details7',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'handicap_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'handicap_id' => 'handicap_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'handicap_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'mode_acquisition' => [
                            'fieldName' => 'mode_acquisition',
                            'joinColumns' => [
                                [
                                    'name' => 'mode_acquisition_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Achat',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'mode_acquisition_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'mode_acquisition_id' => 'mode_acquisition_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'mode_acquisition_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'agence' => [
                            'fieldName' => 'agence',
                            'joinColumns' => [
                                [
                                    'name' => 'agence_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailsCandidatures',
                            'targetEntity' => 'App\\Entity\\Agence',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'agence_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'agence_id' => 'agence_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'agence_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'agences' => [
                            'fieldName' => 'agences',
                            'mappedBy' => 'details',
                            'targetEntity' => 'App\\Entity\\Agence',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\DetailsCandidature',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details2',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details2',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details2Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details2',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'logement_actuel',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details2',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Projet',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Projet',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProjetRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'reference_projet' => [
                            'fieldName' => 'reference_projet',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'reference_projet',
                        ],
                        'nom_du_projet' => [
                            'fieldName' => 'nom_du_projet',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nom_du_projet',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                        'updateAt' => [
                            'fieldName' => 'updateAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'update_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'reference_projet' => 'reference_projet',
                        'nom_du_projet' => 'nom_du_projet',
                        'created_at' => 'createdAt',
                        'update_at' => 'updateAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'reference_projet' => 'reference_projet',
                        'nom_du_projet' => 'nom_du_projet',
                        'createdAt' => 'created_at',
                        'updateAt' => 'update_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'projet',
                    ],
                ],
                'associationMappings' => [
                    [
                        'site' => [
                            'fieldName' => 'site',
                            'joinColumns' => [
                                [
                                    'name' => 'site_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'projets',
                            'targetEntity' => 'App\\Entity\\Site',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Projet',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'site_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'site_id' => 'site_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'site_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'biens' => [
                            'fieldName' => 'biens',
                            'mappedBy' => 'projet',
                            'targetEntity' => 'App\\Entity\\Bien',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Projet',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Bien',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Bien',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\BienRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                        'superficie' => [
                            'fieldName' => 'superficie',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'superficie',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'updated_at',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'status',
                        ],
                        'thumbnail' => [
                            'fieldName' => 'thumbnail',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'thumbnail',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 7,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'color',
                        ],
                        'rooms' => [
                            'fieldName' => 'rooms',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'rooms',
                        ],
                        'bedrooms' => [
                            'fieldName' => 'bedrooms',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'bedrooms',
                        ],
                        'floor' => [
                            'fieldName' => 'floor',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'floor',
                        ],
                        'price' => [
                            'fieldName' => 'price',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'price',
                        ],
                        'address' => [
                            'fieldName' => 'address',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'address',
                        ],
                        'postal_code' => [
                            'fieldName' => 'postal_code',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'postal_code',
                        ],
                        'sold' => [
                            'fieldName' => 'sold',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'options' => [
                                'default' => false,
                            ],
                            'columnName' => 'sold',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'description',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'prix',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'superficie' => 'superficie',
                        'created_at' => 'createdAt',
                        'updated_at' => 'updatedAt',
                        'status' => 'status',
                        'thumbnail' => 'thumbnail',
                        'color' => 'color',
                        'rooms' => 'rooms',
                        'bedrooms' => 'bedrooms',
                        'floor' => 'floor',
                        'price' => 'price',
                        'address' => 'address',
                        'postal_code' => 'postal_code',
                        'sold' => 'sold',
                        'description' => 'description',
                        'prix' => 'prix',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'superficie' => 'superficie',
                        'createdAt' => 'created_at',
                        'updatedAt' => 'updated_at',
                        'status' => 'status',
                        'thumbnail' => 'thumbnail',
                        'color' => 'color',
                        'rooms' => 'rooms',
                        'bedrooms' => 'bedrooms',
                        'floor' => 'floor',
                        'price' => 'price',
                        'address' => 'address',
                        'postal_code' => 'postal_code',
                        'sold' => 'sold',
                        'description' => 'description',
                        'prix' => 'prix',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'bien',
                    ],
                ],
                'associationMappings' => [
                    [
                        'typeDeBien' => [
                            'fieldName' => 'typeDeBien',
                            'joinColumns' => [
                                [
                                    'name' => 'type_de_bien_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'bien',
                            'targetEntity' => 'App\\Entity\\TypeDeBien',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Bien',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_de_bien_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_de_bien_id' => 'type_de_bien_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_de_bien_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'projet' => [
                            'fieldName' => 'projet',
                            'joinColumns' => [
                                [
                                    'name' => 'projet_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'biens',
                            'targetEntity' => 'App\\Entity\\Projet',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Bien',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'projet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'projet_id' => 'projet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'projet_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'mode_acquisition' => [
                            'fieldName' => 'mode_acquisition',
                            'joinColumns' => [
                                [
                                    'name' => 'achat_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'biens',
                            'targetEntity' => 'App\\Entity\\Achat',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Bien',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'achat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'achat_id' => 'achat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'achat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'joinColumns' => [
                                [
                                    'name' => 'city_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'biens',
                            'targetEntity' => 'App\\Entity\\Ville',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Bien',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'city_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'city_id' => 'city_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'city_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Client',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Client',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ClientRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'prenom',
                        ],
                        'adresse' => [
                            'fieldName' => 'adresse',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'adresse',
                        ],
                        'numero_cin_ou_passeport' => [
                            'fieldName' => 'numero_cin_ou_passeport',
                            'type' => 'decimal',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 15,
                            'columnName' => 'numero_cin_ou_passeport',
                        ],
                        'commentaire' => [
                            'fieldName' => 'commentaire',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'commentaire',
                        ],
                        'tel' => [
                            'fieldName' => 'tel',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'tel',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'status',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'email',
                        ],
                        'date_de_naissance' => [
                            'fieldName' => 'date_de_naissance',
                            'type' => 'date',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'date_de_naissance',
                        ],
                        'lieu_de_naissance' => [
                            'fieldName' => 'lieu_de_naissance',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'lieu_de_naissance',
                        ],
                        'nationalite' => [
                            'fieldName' => 'nationalite',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nationalite',
                        ],
                        'profession' => [
                            'fieldName' => 'profession',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'profession',
                        ],
                        'situation_matrimoniale' => [
                            'fieldName' => 'situation_matrimoniale',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'situation_matrimoniale',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 7,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'color',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'adresse' => 'adresse',
                        'numero_cin_ou_passeport' => 'numero_cin_ou_passeport',
                        'commentaire' => 'commentaire',
                        'tel' => 'tel',
                        'status' => 'status',
                        'email' => 'email',
                        'date_de_naissance' => 'date_de_naissance',
                        'lieu_de_naissance' => 'lieu_de_naissance',
                        'nationalite' => 'nationalite',
                        'profession' => 'profession',
                        'situation_matrimoniale' => 'situation_matrimoniale',
                        'created_at' => 'createdAt',
                        'color' => 'color',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'adresse' => 'adresse',
                        'numero_cin_ou_passeport' => 'numero_cin_ou_passeport',
                        'commentaire' => 'commentaire',
                        'tel' => 'tel',
                        'status' => 'status',
                        'email' => 'email',
                        'date_de_naissance' => 'date_de_naissance',
                        'lieu_de_naissance' => 'lieu_de_naissance',
                        'nationalite' => 'nationalite',
                        'profession' => 'profession',
                        'situation_matrimoniale' => 'situation_matrimoniale',
                        'createdAt' => 'created_at',
                        'color' => 'color',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'client',
                    ],
                ],
                'associationMappings' => [
                    [
                        'achat' => [
                            'fieldName' => 'achat',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\Achat',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Client',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Client',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'joinColumns' => [
                                [
                                    'name' => 'ville_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'clients',
                            'targetEntity' => 'App\\Entity\\Ville',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Client',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'ville_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ville_id' => 'ville_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ville_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'agence' => [
                            'fieldName' => 'agence',
                            'joinColumns' => [
                                [
                                    'name' => 'agence_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'clients',
                            'targetEntity' => 'App\\Entity\\Agence',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Client',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'agence_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'agence_id' => 'agence_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'agence_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details7',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details7',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details7Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details7',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'handicap',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details7',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Details1',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Details1',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Details1Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details1',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailsCandidatures' => [
                            'fieldName' => 'detailsCandidatures',
                            'mappedBy' => 'membre_cooperative',
                            'targetEntity' => 'App\\Entity\\DetailsCandidature',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Details1',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
